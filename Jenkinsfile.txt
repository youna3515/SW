pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                // 소스코드 체크아웃
                checkout scm
            }
        }
        stage('Setup') {
            steps {
                // JUnit 라이브러리 다운로드
                sh '''
                    mkdir -p lib
                    curl -L -o lib/junit-jupiter-api-5.7.0.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-api/5.7.0/junit-jupiter-api-5.7.0.jar
                    curl -L -o lib/junit-jupiter-engine-5.7.0.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-engine/5.7.0/junit-jupiter-engine-5.7.0.jar
                    curl -L -o lib/junit-platform-console-standalone-1.7.1.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.7.1/junit-platform-console-standalone-1.7.1.jar
                '''
            }
        }
        stage('Build') {
            steps {
                // Java 파일들을 컴파일하여 생성된 클래스 파일을 classes 디렉토리에 저장
                sh '''
                    find Book/src -name "*.java" > sources.txt
                    javac -encoding UTF-8 -cp "lib/*" -d classes @sources.txt
                '''
            }
        }
        stage('Test') {
            steps {
                script {
                    // JUnit 5 테스트 실행을 위한 classpath 설정
                    def classpath = "classes:lib/*"
                    // JUnit 5 테스트 실행
                    sh "java -cp ${classpath} org.junit.platform.console.ConsoleLauncher --scan-classpath > test_results.txt"
                    // 테스트 결과를 콘솔에 출력
                    sh "cat test_results.txt"
                }
            }
        }
        stage('Performance Test') {
            steps {
                script {
                    // 성능 테스트 실행
                    sh "java -cp ${classpath} PerformanceTest > performance_results/performance_test_results.txt"
                }
            }
        }
    }
    post {
        always {
            // 테스트 결과 파일을 저장하기 위해 아카이브
            archiveArtifacts 'test_results.txt'
            archiveArtifacts 'performance_results/performance_test_results.txt'
        }
        failure {
            echo 'Build or test failed'
        }
        success {
            echo 'Build and test succeeded'
        }
    }
}
